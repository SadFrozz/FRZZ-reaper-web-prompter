name: Build Python Installer

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract Version and Set Env Vars
      id: extract_version
      shell: bash
      run: |
        TITLE=$(sed -n 's|.*<title>\(.*\)</title>.*|\1|p' reaper_www_root/prompter.html | xargs)
        VERSION=$(echo "$TITLE" | grep -o 'v[0-9.]*' || echo "unknown")
        OS_NAME=""
        if [ "${{ runner.os }}" == "Windows" ]; then
          OS_NAME="win"
        elif [ "${{ runner.os }}" == "macOS" ]; then
          OS_NAME="mac"
        fi
        echo "PROMPTER_VERSION=$VERSION" >> $GITHUB_ENV
        echo "OS_NAME=$OS_NAME" >> $GITHUB_ENV
        echo "Final filename: FRZZ-reaper-web-prompter-$VERSION-$OS_NAME"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install PyInstaller
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller

    - name: Build for Windows
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller `
          --name "FRZZ-reaper-web-prompter-${{ env.PROMPTER_VERSION }}-${{ env.OS_NAME }}" `
          --onefile `
          --clean `
          --add-data "Scripts;Scripts" `
          --add-data "reaper_www_root;reaper_www_root" `
          installer.py

    - name: Build for macOS
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller \
          --name "FRZZ-reaper-web-prompter-${{ env.PROMPTER_VERSION }}-${{ env.OS_NAME }}" \
          --onefile \
          --clean \
          --add-data "Scripts:Scripts" \
          --add-data "reaper_www_root:reaper_www_root" \
          installer.py

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        # Имя артефакта теперь уникально для каждой ОС
        name: installer-build-${{ matrix.os }}
        path: dist/